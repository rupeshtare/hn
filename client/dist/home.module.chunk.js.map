{"version":3,"sources":["D:/projects/hn/client/src/app/home/_services/authentication.service.ts","D:/projects/hn/client/src/app/home/_services/index.ts","D:/projects/hn/client/src/app/home/home-routing.module.ts","D:/projects/hn/client/src/app/home/home.component.html","D:/projects/hn/client/src/app/home/home.component.ts","D:/projects/hn/client/src/app/home/home.module.ts","D:/projects/hn/client/src/app/home/login/login.component.html","D:/projects/hn/client/src/app/home/login/login.component.ts"],"names":[],"mappings":"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","file":"home.module.chunk.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Http, Headers, Response } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { SessionStorageService } from './../../_services/index';\r\nimport 'rxjs/add/operator/map';\r\n\r\n@Injectable()\r\nexport class AuthenticationService {\r\n    constructor(\r\n        private http: Http,\r\n        private sessionStorageService: SessionStorageService) { }\r\n\r\n    login(username: string, password: string) {\r\n        return this.http.post('/users/authenticate', { username: username, password: password })\r\n            .map((response: Response) => {\r\n                // login successful if there's a jwt token in the response\r\n                const user = response.json();\r\n                if (user && user.token) {\r\n                    // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n                    this.sessionStorageService.set('currentUser', user);\r\n                }\r\n\r\n                return user;\r\n            });\r\n    }\r\n\r\n    logout() {\r\n        // remove user from local storage to log user out\r\n        this.sessionStorageService.remove('currentUser');\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/projects/hn/client/src/app/home/_services/authentication.service.ts","export { AlertService, LoaderService } from './../../_services/index';\r\nexport { AuthenticationService } from './authentication.service';\r\n\n\n\n// WEBPACK FOOTER //\n// D:/projects/hn/client/src/app/home/_services/index.ts","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './home.component';\r\nimport { LoginComponent } from './login/login.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild([\r\n            {\r\n                path: '',\r\n                pathMatch: 'full',\r\n                component: HomeComponent\r\n            },\r\n            {\r\n                path: 'login',\r\n                component: LoginComponent\r\n            }\r\n        ])\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\n\r\nexport class HomeRoutingModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// D:/projects/hn/client/src/app/home/home-routing.module.ts","module.exports = \"<div style=\\\"text-align:center\\\">\\r\\n  <div>\\r\\n    <img src=\\\"assets/images/hotelnakshatra.jpg\\\">\\r\\n  </div>\\r\\n  <div>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-lg btn-outline-primary\\\" routerLink=\\\"/\\\">Menu</button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-lg btn-outline-secondary\\\" routerLink=\\\"/login\\\">Admin</button>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projects/hn/client/src/app/home/home.component.html\n// module id = ../../../../../src/app/home/home.component.html\n// module chunks = home.module","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    templateUrl: './home.component.html'\r\n})\r\n\r\nexport class HomeComponent { }\r\n\n\n\n// WEBPACK FOOTER //\n// D:/projects/hn/client/src/app/home/home.component.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HomeComponent } from './home.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { HomeRoutingModule } from './home-routing.module';\r\nimport { AuthenticationService } from './_services/index';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        HomeRoutingModule\r\n    ],\r\n    declarations: [\r\n        HomeComponent,\r\n        LoginComponent\r\n    ],\r\n    providers: [\r\n        AuthenticationService\r\n    ]\r\n})\r\n\r\nexport class HomeModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// D:/projects/hn/client/src/app/home/home.module.ts","module.exports = \"<div style=\\\"text-align:center\\\">\\r\\n    <div>\\r\\n        <img src=\\\"assets/images/hotelnakshatra.jpg\\\">\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"container\\\">\\r\\n    <h2>Login</h2>\\r\\n    <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && login()\\\" #f=\\\"ngForm\\\" novalidate>\\r\\n        <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-5\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && !username.valid }\\\" name=\\\"username\\\" placeholder=\\\"Username\\\"\\r\\n                    [(ngModel)]=\\\"model.username\\\" #username=\\\"ngModel\\\" required />\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-5\\\">\\r\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && !password.valid }\\\" name=\\\"password\\\"\\r\\n                    placeholder=\\\"Password\\\" [(ngModel)]=\\\"model.password\\\" #password=\\\"ngModel\\\" required />\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-2\\\">\\r\\n                <button class=\\\"btn btn-primary\\\">Login</button>\\r\\n                <button class=\\\"btn btn-secondary\\\" routerLink=\\\"/\\\">Cancle</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </form>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projects/hn/client/src/app/home/login/login.component.html\n// module id = ../../../../../src/app/home/login/login.component.html\n// module chunks = home.module","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { AlertService, AuthenticationService } from './../_services/index';\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    templateUrl: 'login.component.html'\r\n})\r\n\r\nexport class LoginComponent implements OnInit {\r\n    public model: any = {};\r\n    private returnUrl: string;\r\n\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private authenticationService: AuthenticationService,\r\n        private alertService: AlertService) { }\r\n\r\n    ngOnInit() {\r\n        // reset login status\r\n        this.authenticationService.logout();\r\n\r\n        // get return url from route parameters or default to '/'\r\n        this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/admin';\r\n    }\r\n\r\n    login() {\r\n        this.authenticationService.login(this.model.username, this.model.password)\r\n            .subscribe(\r\n            data => {\r\n                this.router.navigate([this.returnUrl]);\r\n            },\r\n            err => {\r\n                this.alertService.error(err);\r\n            });\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/projects/hn/client/src/app/home/login/login.component.ts"],"sourceRoot":"webpack:///"}